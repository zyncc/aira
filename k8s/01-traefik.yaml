# 01-traefik.yaml

# This is a simplified setup. For production, using the official Traefik Helm chart is recommended.
# It automatically handles RBAC permissions and Custom Resource Definitions (CRDs).

# --- Persistent Volume Claim for Let's Encrypt certificates ---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: letsencrypt-pvc
  namespace: aira-prod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi # 1GB is plenty for ACME certificates
---
# --- Traefik Deployment ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: aira-prod
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      containers:
        - name: traefik
          image: traefik:v3.1
          args:
            - "--api.insecure=true" # Exposes the dashboard on port 8080. Secure this for production.
            - "--providers.kubernetescrd"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
            - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
            - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
            - "--certificatesresolvers.myresolver.acme.email=airaclothinglabel@gmail.com"
            - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
            - name: letsencrypt-storage
              mountPath: /letsencrypt
      volumes:
        - name: letsencrypt-storage
          persistentVolumeClaim:
            claimName: letsencrypt-pvc
---
# --- Traefik Service to expose it to the internet ---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: aira-prod
spec:
  type: LoadBalancer # This will provision a cloud load balancer on AWS, GCP, etc.
  selector:
    app: traefik
  ports:
    - protocol: TCP
      name: web
      port: 80
      targetPort: 80
    - protocol: TCP
      name: websecure
      port: 443
      targetPort: 443
    - protocol: TCP
      name: admin
      port: 8080
      targetPort: 8080