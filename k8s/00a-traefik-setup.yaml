# k8s/00a-traefik-setup.yaml
# This is the final, complete setup file for Traefik.
# It includes all necessary CRDs and the final, corrected RBAC permissions.

# --- Custom Resource Definitions (CRDs) ---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: IngressRoute,
      listKind: IngressRouteList,
      plural: ingressroutes,
      singular: ingressroute,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ingressroutetcps.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: IngressRouteTCP,
      listKind: IngressRouteTCPList,
      plural: ingressroutetcps,
      singular: ingressroutetcp,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ingressrouteudps.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: IngressRouteUDP,
      listKind: IngressRouteUDPList,
      plural: ingressrouteudps,
      singular: ingressrouteudp,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: middlewares.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: Middleware,
      listKind: MiddlewareList,
      plural: middlewares,
      singular: middleware,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: middlewaretcps.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: MiddlewareTCP,
      listKind: MiddlewareTCPList,
      plural: middlewaretcps,
      singular: middlewaretcp,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serverstransports.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: ServersTransport,
      listKind: ServersTransportList,
      plural: serverstransports,
      singular: serverstransport,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serverstransporttcps.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: ServersTransportTCP,
      listKind: ServersTransportTCPList,
      plural: serverstransporttcps,
      singular: serverstransporttcp,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tlsoptions.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: TLSOption,
      listKind: TLSOptionList,
      plural: tlsoptions,
      singular: tlsoption,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tlsstores.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: TLSStore,
      listKind: TLSStoreList,
      plural: tlsstores,
      singular: tlsstore,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: traefikservices.traefik.io
spec:
  group: traefik.io
  names:
    {
      kind: TraefikService,
      listKind: TraefikServiceList,
      plural: traefikservices,
      singular: traefikservice,
    }
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec: { type: object, x-kubernetes-preserve-unknown-fields: true }
      served: true
      storage: true
---
# --- Role-Based Access Control (RBAC) ---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups: [""]
    resources: [services, endpoints, secrets, nodes] # <-- ADDED 'nodes' HERE
    verbs: [get, list, watch]
  - apiGroups: [discovery.k8s.io]
    resources: [endpointslices]
    verbs: [get, list, watch]
  - apiGroups: [extensions, networking.k8s.io]
    resources: [ingresses, ingressclasses]
    verbs: [get, list, watch]
  - apiGroups: [traefik.io]
    resources: ["*"]
    verbs: [get, list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: default
    namespace: aira
