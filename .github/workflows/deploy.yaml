# .github/workflows/deploy.yml
# This workflow uses a single, consolidated setup file for Traefik.

name: Build and Deploy Aira to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout your repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx for building the image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Log in to the GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Generate a consistent encryption key for build-time and run-time
      - name: Generate Encryption Key
        id: generate_key
        run: echo "key=$(openssl rand -hex 32)" >> $GITHUB_OUTPUT

      # 5. Build and push the Docker image with a unique tag
      - name: Build and Push Docker Image
        id: build_image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/zyncc/aira:prod-${{ github.sha }}
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}
            NEXT_SERVER_ACTIONS_ENCRYPTION_KEY=${{ steps.generate_key.outputs.key }}

      # 6. Set up kubectl with credentials to access your cluster
      - name: Setup Kubeconfig
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      # 7. Create Namespace
      - name: Create Namespace
        run: kubectl apply -f k8s/00-namespace.yaml

      # 8. (UPDATED) Apply Traefik Setup (CRDs & RBAC) and Wait
      - name: Apply Traefik Setup and Wait
        run: |
          kubectl apply -f k8s/00a-traefik-setup.yaml
          echo "Waiting for CRDs and RBAC to be recognized..."
          sleep 15

      # 9. Create or update the Kubernetes Secret for environment variables
      - name: Create/Update Kubernetes Secret
        run: |
          kubectl create secret generic nextjs-env \
            --namespace=aira-prod \
            --from-literal=CLOUDINARY_API_KEY='${{ secrets.CLOUDINARY_API_KEY }}' \
            --from-literal=CLOUDINARY_API_SECRET='${{ secrets.CLOUDINARY_API_SECRET }}' \
            --from-literal=CLOUDINARY_CLOUD_NAME='${{ secrets.CLOUDINARY_CLOUD_NAME }}' \
            --from-literal=SMTP_PASSWORD='${{ secrets.SMTP_PASSWORD }}' \
            --from-literal=DELHIVERY_TOKEN='${{ secrets.DELHIVERY_TOKEN }}' \
            --from-literal=WHATSAPP_PHONE_NUMBER='${{ secrets.WHATSAPP_PHONE_NUMBER }}' \
            --from-literal=WHATSAPP_CLOUD_API_KEY='${{ secrets.WHATSAPP_CLOUD_API_KEY }}' \
            --from-literal=DATABASE_URL='${{ secrets.DATABASE_URL }}' \
            --from-literal=DIRECT_URL='${{ secrets.DIRECT_URL }}' \
            --from-literal=WHATSAPP_PHONE_NUMBER='${{ secrets.WHATSAPP_PHONE_NUMBER }}' \
            --from-literal=WHATSAPP_CLOUD_API_KEY='${{ secrets.WHATSAPP_CLOUD_API_KEY }}' \
            --from-literal=TWITTER_CLIENT_ID='${{ secrets.TWITTER_CLIENT_ID }}' \
            --from-literal=TWITTER_CLIENT_SECRET='${{ secrets.TWITTER_CLIENT_SECRET }}' \
            --from-literal=GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}' \
            --from-literal=NEXT_PUBLIC_GOOGLE_CLIENT_ID='${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}' \
            --from-literal=NEXT_PUBLIC_BASE_URL='${{ secrets.NEXT_PUBLIC_BASE_URL }}' \
            --from-literal=BETTER_AUTH_SECRET='${{ secrets.BETTER_AUTH_SECRET }}' \
            --from-literal=BETTER_AUTH_URL='${{ secrets.BETTER_AUTH_URL }}' \
            --from-literal=NEXT_PUBLIC_RAZORPAY_KEY_ID='${{ secrets.NEXT_PUBLIC_RAZORPAY_KEY_ID }}' \
            --from-literal=RAZORPAY_KEY_SECRET='${{ secrets.RAZORPAY_KEY_SECRET }}' \
            --from-literal=RAZORPAY_WEBHOOK_SECRET='${{ secrets.RAZORPAY_WEBHOOK_SECRET }}' \
            --from-literal=NEXT_SERVER_ACTIONS_ENCRYPTION_KEY='${{ steps.generate_key.outputs.key }}' \
            --from-literal=NODE_ENV='${{ secrets.NODE_ENV }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      # 10. Update the image tag in your deployment file
      - name: Update image tag in Kubernetes manifest
        run: |
          sed -i "s|image: ghcr.io/zyncc/aira:prod.*|image: ghcr.io/zyncc/aira:prod-${{ github.sha }}|g" k8s/02-nextjs-app.yaml

      # 11. Deploy all other Kubernetes resources
      - name: Deploy Kubernetes Resources
        run: kubectl apply -f k8s/
